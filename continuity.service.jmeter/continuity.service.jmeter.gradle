apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Finchley.M4'
	}
}

dependencies {
	compile project(':continuity.lib.api')
	compile project(':continuity.lib.commons')
	
	// Spring Boot
	
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-amqp")
	compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
	compile ("org.springframework.boot:spring-boot-starter-actuator")
	testCompile("org.springframework.boot:spring-boot-starter-test")

	// Swagger
	
	compile("io.springfox:springfox-swagger2:2.7.0")
	compile("io.springfox:springfox-swagger-ui:2.7.0")
	
	// Micrometer
    compile group: 'io.micrometer', name: 'micrometer-core', version: '1.0.6'
    compile group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.0.6'
	
	
	// JMeter launcher
	
	compile (group: 'org.apache.jmeter', name: 'ApacheJMeter', version: '3.1') {
		exclude group: 'org.mongodb', module: 'mongo-java-driver'
	}
	
	// Required for Eclipse
	compile("org.codehaus.groovy:groovy-all:2.4.7")
}

task copyJmeterFolders(type: Copy) {
	from '..'
	into 'build'
	include 'bin/**'
	include 'lib/**'
}

build.dependsOn {
	copyJmeterFolders
}

group = 'continuityproject'

apply plugin: 'com.palantir.docker'

docker {
	name "${project.group}/jmeter"
	files jar.archivePath
	copySpec.from('build') {
		include 'bin/**'
		include 'lib/**'
	}
	buildArgs(['JAR_FILE': "${jar.archiveName}"])
}