apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-starter-parent:Finchley.M4'
	}
}

repositories {
    maven {
          url "https://repository.novatec-gmbh.de/content/repositories/diagnoseIT/"
    }
    
    maven {
          url "https://repository.novatec-gmbh.de/content/repositories/novatec/"
    }
}

dependencies {
	compile project(':continuity.lib.api')
	compile project(':continuity.lib.commons')
	
	// Spring Boot
	
	compile("org.springframework.boot:spring-boot-starter-web")
	compile("org.springframework.boot:spring-boot-starter-amqp")
	compile("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
	
	// Swagger
	
	compile("io.springfox:springfox-swagger2:2.7.0")
	compile("io.springfox:springfox-swagger-ui:2.7.0")
	
	// Elasticsearch
	
	compile 'org.elasticsearch.client:elasticsearch-rest-high-level-client:7.2.0'
	compile 'org.elasticsearch:elasticsearch:7.2.0'
	
	testCompile("org.springframework.boot:spring-boot-starter-test")
	
	// Required for Eclipse
	compile("org.codehaus.groovy:groovy-all:2.4.7")
	
	// Needed for OpenXtrace Deserialization (not pretty). 
	compile("org.codehaus.jackson:jackson-core-asl:1.9.13")
	compile("org.codehaus.jackson:jackson-mapper-asl:1.9.13")
	
	compile("org.spec.research:open.xtrace.api:0.2.2")
	compile("org.spec.research:open.xtrace.default.impl:0.2.2")
	
	compile("rocks.inspectit:shared-all:1.9.1")
	
	// CSV mapper
	compile("com.univocity:univocity-parsers:2.7.5")
}

group = 'continuityproject'

apply plugin: 'com.palantir.docker'

docker {
	name "${project.group}/session-logs"
	files jar.archivePath
	copySpec.from('.') {
		include 'configuration/**'
	}
	buildArgs(['JAR_FILE': "${jar.archiveName}"])
}